local a={env__vm_random_double=0}for b,c in pairs(a)do a[b]=function()return error("Unlinked function: '"..b.."'")end end;local d=require("bit")local function e(f)return f==true or f~=false and f~=0 end;local function g(h,i,j,k,l)if j<0 or j>i*2^16 then error("Attempt to store outside bounds",2)end;if l==8 then ffi.cast("uint"..l.."_t*",h+j)[0]=k else ffi.cast("int"..l.."_t*",h+j)[0]=k end end;local function m(h,i,j,k,l)k=k or 0;if j<0 or j>i*2^16 then error("Attempt to store outside bounds",2)end;if l==8 then ffi.cast("double*",h+j)[0]=k else ffi.cast("float*",h+j)[0]=k end end;local function n(h,i,j,l)if j<0 or j>i*2^16 then error("Attempt to read outside bounds "..j,2)end;if l==8 then return ffi.cast("uint"..l.."_t*",h+j)[0]else return ffi.cast("int"..l.."_t*",h+j)[0]end end;local o={}local p,q,r;function p(s,t)if true then return s+t end end;function q(u)local v=0;local w=a.env__vm_random_double()v=w;if e(v<=u and 1 or 0)then::x::if true then return 1 end::y::end;if true then return 0 end end;function r()local z=0;local A=0;local B=0;z=0;A=0;B=0;do::C::do::D::if e((z<1000000 and 1 or 0)==0 and 1 or 0)then goto E end;local O=p(z,1)z=z+1;goto D::F::end::E::end;if true then return z end;return O end;o.test=r;o.award=q;return{exports=o,importTable=a}